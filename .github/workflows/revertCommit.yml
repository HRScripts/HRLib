name: Revert Commit

on:
  workflow_dispatch:

permissions:
  contents: write  # Allow modifying repository contents
  actions: write   # Optional: Allow actions permissions
  issues: write    # Optional: Allow issues permissions

jobs:
  revert-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for the repository

      - name: Set up Git
        run: |
          git config --local user.email "hr.fivem.dev@gmail.com"
          git config --local user.name "GitHub Actions"

      - name: Revert to Previous Commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication
        run: |
          git checkout main
          git reset --hard HEAD~1
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/HRScripts/HRLib.git main --force
Key Points
contents: write: This allows the workflow to push changes to the repository.
Other Permissions: You can add other permissions as needed (like issues, pull-requests, etc.).
Using GITHUB_TOKEN: This token is automatically created by GitHub and has permissions based on the specified settings.
Saving the Workflow
Save the workflow in your .github/workflows/ directory.
Trigger it manually via the GitHub Actions interface.
This setup should give your workflow the necessary permissions to modify the main branch without running into permission issues. If you encounter further issues, please let me know!



Вие казахте:
how to make it skip the reset of the .github/workflows path?
ChatGPT каза:
ChatGPT
To make your GitHub Actions workflow skip resetting changes in the .github/workflows directory, you can specify a .gitignore entry for that path or modify the git reset command to exclude it.

However, Git doesn't support excluding files or directories with git reset. Instead, you can revert the changes after the reset or handle it differently.

Option 1: Use a .gitignore File
Create a .gitignore file in the root of your repository (if it doesn't exist).

Add the following line:

bash
Копиране на код
.github/workflows/
This approach will prevent changes in that directory from being committed in the future, but it won't affect the current workflow run.

Option 2: Reset and Restore the Workflows Directory
Instead of using git reset, you can manually revert the specific files you want to keep:

yaml
Копиране на код
name: Revert Commit

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  revert-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --local user.email "hr.fivem.dev@gmail.com"
          git config --local user.name "GitHub Actions"

      - name: Revert to Previous Commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout main
          git reset --hard HEAD~1
          
          # Restore the workflows directory
          git checkout HEAD -- .github/workflows/
          
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/HRScripts/HRLib.git main --force
